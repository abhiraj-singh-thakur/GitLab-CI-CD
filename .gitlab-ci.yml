stages:
  - test
  - build
  - scan
  - deploy

test-job:
  stage: test
  image: node:latest
  tags:
    - ec2-runner  # Ensures it runs only on the EC2 instance
  script:
    - npm install
    - npm test

build-job:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  tags:
    - ec2-runner
  before_script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build -t $DOCKER_USERNAME/node-todo-app:latest .
    - docker push $DOCKER_USERNAME/node-todo-app:latest

scan-job:
  stage: scan
  image: docker:latest
  services:
    - docker:dind
  tags:
    - ec2-runner
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker pull $DOCKER_USERNAME/node-todo-app:latest
    - trivy image $DOCKER_USERNAME/node-todo-app:latest --exit-code 0 --format json -o trivy-report.json
  artifacts:
    paths:
      - trivy-report.json
    expire_in: 1 week
    reports:
      container_scanning: trivy-report.json

deploy-job:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  tags:
    - ec2-runner
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker pull $DOCKER_USERNAME/node-todo-app:latest
    - docker stop node-todo-app || true
    - docker rm node-todo-app || true
    - docker-compose up -d
